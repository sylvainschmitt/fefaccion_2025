---
title: "Dinâmica florestal com R"
author: Géraldine Derroire & Sylvain Schmitt
institute: Cirad
date: "11/07/2025"
format: 
  revealjs:
    theme: night
    output-location: fragment 
    slide-number: true
    preview-links: true
    chalkboard: true
    link-external-icon: true
    link-external-newwindow: true
    incremental: false
    smaller: true
    logo: figs/logo.png
    code-linkk: true
execute:
  echo: true   
  warning: false
  message: false
  cache: false
editor: 
  markdown: 
    wrap: sentence
include-in-header:
  - text: |
      <style>
      .reveal .slide-logo {
        max-height: unset;
        height: 75px;
      }
      </style>
---

## Pacotes R

Usaremos os pacotes `tidyverse` e `GGally` para manipular tabelas e criar gráficos, `vegan` para fazer análises da vegetação e `brms` e `tidybayes` para fazer modelização bayesiana.

```{r }
library(tidyverse)
library(GGally)
library(vegan)
library(brms)
library(tidybayes)
```

# Dados

## Dados de parcelas florestais permanentes

::: {.column width="60%"}
-   Dados de uma parcela permanente (parcela 6) na estação de pesquisa florestal de [Paracou](https://paracou.cirad.fr/website) na Guiana Francesa

-   Todas as árvores com um diâmetro à altura do peito (DAP) ≥ 10 cm são mapeadas, identificadas botanicamente e medidas em cada censo

![](figs/foto_inventorio.png){fig-align="center" height="60%"}
:::

::: {.column width="35%"}
![](figs/paracou.png)
:::

## Dados de parcelas florestais permanentes

Começamos carregando os dados na forma de objetos no formato Rdata.

```{r}
#| eval: false
#| echo: false
dt_P6 <- read_csv(file = "data/2024-08-29_ParacouP6AllYears.csv")
dt_P6 <- dt_P6 %>% 
  select(Forest, Plot, PlotArea, SubPlot, 
         idTree, Xutm, Yutm, 
         Family, Genus, Species,
         CensusYear, CodeAlive, CircCorr)
save(dt_P6, file = "data/data_paracou_p6.RData")
```

```{r}
load(file = "data/data_paracou_p6.RData")
dt_P6
```

[⚠️ Esses dados NÃO são de acesso livre, por favor, não os distribua nem utilize para qualquer outro fim.]{.fragment}

## Dados de parcelas florestais permanentes

Esses dados contêm:

::::: columns
::: {.column width="50%"}
-   **Forest**: Nome da floresta

-   **Plot**: Número da parcela

-   **PlotArea**: Área da parcela (hectares)

-   **SubPlot**: Número da subparcela

-   **idTree**: Identificador único da árvore no banco de dados

-   **Xutm** e **Yutm**: Coordenadas da árvore (UTM 22N (EPSG: 32 622))
:::

::: {.column width="50%"}
-   **Family**

-   **Genus**

-   **Species**

-   **CensusYear**: Ano da medição

-   **CodeAlive**: A árvore está viva (1) ou morta (0)?

-   **CircCorr**: Circunferência (cm) da árvore no ponto de medição
:::
:::::

## Dados de características funcionais

Vamos usar os dados das características funcionais das árvores da Guiana Francesa obtidos na base de dados [TRY](https://www.try-db.org/TryWeb/Home.php) e compilados no pacote [rcontroll](https://besjournals.onlinelibrary.wiley.com/doi/full/10.1111/2041-210X.14215).

Esses dados estão disponíveis [aqui](https://github.com/sylvainschmitt/fefaccion_2025/workshop/data/data/dt_traits.RData).

```{r}
dt_traits <- read_tsv("https://raw.githubusercontent.com/sylvainschmitt/rcontroll/refs/heads/main/inst/extdata/TROLLv3_species.txt") %>% 
  select(-s_seedmass, -s_regionalfreq, -s_drymass) %>% 
  rename(species = s_name, LMA = s_LMA, Nmass = s_Nmass,
         Pmass = s_Pmass, wsg = s_wsg, dbhmax = s_dbhmax, 
         hmax = s_hmax, ah = s_ah, tlp = s_tlp)
dt_traits
```

## Dados de características funcionais

::::: columns
::: {.column width="50%"}
[Esses dados contêm os valores de 11 características funcionais para 45 espécies. Vamos focar nos seguintes características:]{style="font-size: 25px"}

-   [massa foliar por área (**LMA**, em $g~m^{-2}$)]{style="font-size: 25px"}

-   [massa de nitrogênio foliar (**Nmass**, em $g~g^{-1}$)]{style="font-size: 25px"}

-   [massa de fósforo foliar (**Pmass**, em $g~g^{-1}$)]{style="font-size: 25px"}

-   [gravidade específica da madeira (**wsg**, em $g~cm^{-3}$)]{style="font-size: 25px"}

-   [potencial hídrico foliar no ponto de perda de turgor (**tlp**, em $MPa$)]{style="font-size: 25px"}
:::

::: {.column width="50%"}
```{r}
dt_traits <- dt_traits %>% 
  select(species, LMA, Nmass, Pmass, wsg, tlp)

dt_traits %>% slice_head(n = 5)
```
:::
:::::

# Exploração de dados de características funcionais

## Distribuição das valores das características

Podemos começar examinando a distribuição de valores para cada um dos recursos com um histograma usando o pacote `ggplot` (parte de `tidyverse`).

```{r}
#| fig-height: 3.5
#| fig-width: 8
#| fig-align: center
dt_traits %>% 
  pivot_longer(LMA : tlp, 
               names_to = "traits", values_to = "values") %>% 
  ggplot(aes(x = values)) + geom_histogram() +
  facet_wrap(~ traits, scales = "free") + theme_bw()
```

::: notes
LMA, Nmass, e Pmass tendem a valores pequenos TLP e wsg a valores grandes
:::

## Coeficientes de variação das características

Podemos ver que as características são mais ou menos variáveis, mas para quantificar isso adequadamente, podemos usar o coeficiente de variação definido como:

$$CV = \frac{desvio\ padrão}{média}$$

```{r}
dt_traits %>% summarise(
  across(LMA : tlp,
         function(v) {round(sd(v)/abs(mean(v)), 3)}))
```

::: notes
CV igual o desvio padrão (sigma) dividida pela média (mu)
:::

## Correlações entre pares de características

As características não variam de forma independente, portanto, podemos explorar as relações entre cada par de características usando os coeficientes de correlação.

```{r}
#| fig-height: 3.5
#| fig-align: center
ggpairs(dt_traits, columns = names(dt_traits)[-1])
```

::: notes
LMA, Nmass e Pmass correlacionados

wsg tlp correlacionados
:::

## Axes de covariância de características funcionais

Para entender melhor a organização geral de todos os recursos em “estratégias funcionais”, podemos construir uma análise de componentes principais (ACP) com o pacote `vegan`.

```{r}
trait_pca <- dt_traits %>% select(-species) %>% 
  pca(scale = TRUE)
summary(trait_pca)
```

::: notes
os dois primeiros eixos capturam 73% da variabilidade total do conjunto de dados
:::

## Axes de covariância de características funcionais

Podemos representar a PCA em um biplot de eixos 1-2 com as características como variáveis representadas por setas e as espécies por pontos posicionados de acordo com os valores de suas características.

:::::: columns
::: {.column width="40%"}
```{r}
#| fig-height: 4
#| fig-width: 5
#| fig-align: center
# display as características
biplot(trait_pca, scaling = 2, 
       display = "species") 
# display as espécies
points(trait_pca, scaling = 2, 
       display = "sites", type ="points") 
```
:::

:::: {.column width="60%"}
::: incremental
-   Axe 1: **espectro econômico das folhas**: estratégias de aquisição de recursos conservadoras (lentas) *versus* aquisitivas (rápidas) [Wright *et al* 2004](https://www.nature.com/articles/nature02403)

-   As características da madeira [Baraloto *et al* 2010](https://onlinelibrary.wiley.com/doi/10.1111/j.1461-0248.2010.01517.x) e as características relacionadas com a água [Maréchaux *et al* 2019](https://besjournals.onlinelibrary.wiley.com/doi/full/10.1111/1365-2745.13321) são independentes do espectro econômico das folhas.
:::
::::
::::::

::: notes
display não é intuitiva no vegan, se não estiver trabalhando com uma tabela florística

"species" são as variáveis (aqui, as características)

"sites" são as observações (aqui, as espécies)
:::

# Exploração dos dados de crescimento

## Preparação dos dados

Para usar os dados de crescimento, começamos filtrando os dados da parcela 6.

-   Manter apenas as árvores totalmente determinadas

```{r}
dt_P6 <- dt_P6 %>% 
  filter(Species != "Indet.")
```

-   Calcular o DAP

```{r}
dt_P6 <- dt_P6 %>% 
  mutate(DBH = CircCorr / pi)
```

-   Manter apenas a observação de árvores vivas com $DAP ≥ 10 cm$

```{r}
dt_P6 <- dt_P6 %>% 
  filter(DBH >= 10 & CodeAlive ==1) 
```

-   Adicionar os nomes completos das espécies

```{r}
dt_P6 <- dt_P6 %>% 
  unite(GenSp,
        Genus, Species,
        sep = "_", 
        remove = FALSE)
```

## Número de indivíduos

-   Número total de indivíduos

```{r}
n_distinct(dt_P6$idTree)
```

::: fragment
-   Número de indivíduos por censo e duração do monitoramento

```{r}
#| fig-height: 3
#| fig-width: 5
#| fig-align: center
dt_P6 %>% count(CensusYear)  %>% 
  ggplot(aes(x = CensusYear, y = n)) + 
  geom_point() + geom_line() + 
  ylim(0, 4000) +
  labs(x = "Ano da medição", y = "Número de indivíduos") +
  theme_bw()
```
:::

::: notes
35 censos entre 1984 e 2024

cerca de 3600-3800 indivíduos por censo
:::

## Cálculo do crescimento anual

```{r}
dt_P6 <- dt_P6 %>% 
  group_by(idTree) %>% 
  arrange(CensusYear) %>% 
  mutate(Growth = (DBH - lag(DBH)) / (CensusYear - lag(CensusYear))) %>% 
  filter(Growth >= 0) %>% 
  ungroup()

dt_P6 %>% select(idTree, CensusYear, DBH, Growth) %>% 
  filter(idTree == 100621) %>% 
  head(n = 15)
```

::: notes
O crescimento anual é calculado como a diferença de diâmetro entre dois anos dividida pela diferença de tempo entre esses dois anos, calculada usando a função de defasagem.
:::

## Trajetórias de crescimento

```{r}
#| fig-height: 3.5
#| fig-width: 7
#| fig-align: center
plot_traj_DBH <- function(id, dt) {
    sp <- dt %>% filter(idTree == id) %>% distinct(GenSp) # especie
    n <- dt %>% filter(idTree == id) %>% count() # medições
    filter(dt, idTree == id) %>% 
      ggplot(aes(x=CensusYear, y = DBH)) + 
      geom_point() + 
      geom_smooth(method = "loess", se = FALSE) + 
      labs(x = "Ano da medição",
           y = "Diâmetro à altura do peito (em cm)",
           title = paste0("Trajetória do diâmetro - Indivíduo ", id, 
                          " - ", sp, " (", n, " medições)")) + theme_bw() 
}
plot_traj_DBH(id = "103768", dt = dt_P6)
```

::: notes
Podemos representar o crescimento como diâmetro ao longo do tempo

Aqui por so um individuo

Como escrevemos uma função, você pode experimentá-la facilmente para outros indivíduos.
:::

## Trajetórias de crescimento

```{r}
#| fig-height: 3.5
#| fig-width: 7
#| fig-align: center
plot_traj_Growth <- function(id, dt) {
    sp <- dt %>% filter(idTree == id) %>% distinct(GenSp) # especie
    n <- dt %>% filter(idTree == id) %>% count() # medições
    filter(dt, idTree == id) %>% 
      ggplot(aes(x=DBH, y = Growth)) + 
      geom_point() + 
      geom_smooth(method = "loess", se = FALSE) + 
      labs(x = "Ano da medição",
           y = "Crescimento anual (em cm/ano)",
           title = paste0("Trajetória de crecimento - Indivíduo ", id, 
                          " - ", sp, " (", n, " medições)")) + theme_bw() 
}
plot_traj_Growth(id = "103768", dt = dt_P6)
```

::: notes
Podemos representar o crescimento como um incremento anual em função do diâmetro para representar melhor o efeito da ontogenia

Aqui por so um individuo

Como escrevemos uma função, você pode experimentá-la facilmente para outros indivíduos.
:::

## Trajetórias de crescimento

```{r}
#| fig-height: 3.5
#| fig-width: 7
#| fig-align: center
plot_traj_sp <- function(sp, dt) {
    n <- dt %>% filter(GenSp == sp) %>% count() # medições
    filter(dt, GenSp == sp) %>% 
      ggplot(aes(x=DBH, y = Growth)) + 
      geom_point() + 
      geom_smooth(method = "loess", se = FALSE) + 
      labs(x = "Ano da medição",
           y = "Crescimento anual (em cm/ano)",
           title = paste0("Trajetória de crecimento - ",
                          sp, " (", n, " medições)")) + theme_bw() 
}
plot_traj_sp(sp = "Cecropia_obtusa", dt = dt_P6)
```

::: notes
Podemos representar o crescimento como um incremento anual em função do diâmetro para representar melhor o efeito da ontogenia

Aqui por todos os individuos da especie Cecropia obtusa

Como escrevemos uma função, você pode experimentá-la facilmente para outras especies.
:::

# Modelagem do crescimento

## Modelo de Canham

$$log(AGR+1)=G \times exp[-0.5 \times( \frac{log(DBH/D)}{K}^2)]$$

```{r}
#| fig-align: center
data_frame(DBH = 10:100) %>% mutate(log_agr = 0.5*exp(-0.5*(log(DBH/50)^2/0.2))) %>% 
  ggplot(aes(DBH, exp(log_agr)-1)) + geom_line() + theme_bw() +
  labs(x = "Ano da medição",
       y = "Crescimento anual") + theme_bw() +
  geom_vline(xintercept = 50, colour = "red", linetype = "dashed") + 
  geom_hline(yintercept = exp(0.5)-1, colour = "red", linetype = "dashed")
```

::: notes
G representa o potencial máximo de crescimento da espécie atingido em um diâmetro D, K representa a largura dessa resposta de crescimento em forma de sino.
:::

## Uma inferência com *Cecropia obtusa*

```{r}
#| eval: false
fit <- brm(bf(log(Growth+1) ~ G*exp(-0.5*(log(DBH/D)^2/K)),
              G ~ 1, D ~ 1, K ~ 1,
              nl = TRUE),
           prior = c(
                 prior("uniform(0.001,3)", lb = 0.001, ub = 3, nlpar = "G"),
                 prior("uniform(0.001,3)", lb = 0.001, ub = 3, nlpar = "K"),
                 prior("uniform(1,30)", lb = 1, ub = 30, nlpar = "D")
          ),
           data = filter(dt_P6, GenSp  == "Cecropia_obtusa"),
           cores = 4)
save(fit, file = "data/fit_cecro.Rdata")
```

```{r}
load(file = "data/fit_cecro.Rdata") ; fit
```

::: notes
Estamos começando com uma espécie pioneira
:::

## Uma inferência com *Cecropia obtusa*

```{r}
plot_fit <- function(fit, Species) {
  G <- posterior_summary(fit)[1, "Estimate"]
  D <- posterior_summary(fit)[2, "Estimate"]
  K <- posterior_summary(fit)[3, "Estimate"]
  filter(dt_P6, GenSp  == !!Species) %>% 
    ggplot(aes(x=DBH, y = Growth)) + geom_point() + 
    stat_function(fun = function(x) exp(G*exp(-0.5*(log(x/D)^2/K))) - 1,
                  colour = "red", size = 2) +
        labs(x = "Ano da medição",
             y = "Crescimento anual") + theme_bw() +
    geom_vline(xintercept = D, colour = "red", linetype = "dashed") + 
    geom_hline(yintercept = exp(G)-1, colour = "red", linetype = "dashed") +
    ylim(0, NA) + xlim(10, NA)
}
```

## Uma inferência com *Cecropia obtusa*

```{r}
#| fig-height: 4.5
#| fig-width: 7
#| fig-align: center
plot_fit(fit = fit, Species = "Cecropia_obtusa")
```

## Uma inferência com *Dicorynia guianensis*

```{r}
#| eval: false
fit <- brm(bf(log(Growth+1) ~ G*exp(-0.5*(log(DBH/D)^2/K)),
              G ~ 1, D ~ 1, K ~ 1,
              nl = TRUE),
           prior = c(
                 prior("uniform(0.001,3)", lb = 0.001, ub = 3, nlpar = "G"),
                 prior("uniform(0.001,3)", lb = 0.001, ub = 3, nlpar = "K"),
                 prior("uniform(1,300)", lb = 1, ub = 300, nlpar = "D")
          ),
           data = filter(dt_P6, GenSp  == "Dicorynia_guianensis"),
           cores = 4)
save(fit, file = "data/fit_dico.Rdata")
```

```{r}
load(file = "data/fit_dico.Rdata") ; fit
```

::: notes
A Dicorynia é a espécie mais explorada na Guiana Francesa, semelhante ao ipê
:::

## Uma inferência com *Dicorynia guianensis*

```{r}
#| fig-height: 4.5
#| fig-width: 7
#| fig-align: center
plot_fit(fit = fit, Species = "Dicorynia_guianensis")
```

## Uma inferência com *Eschweilera sagotiana*

```{r}
#| eval: false
fit <- brm(bf(log(Growth+1) ~ G*exp(-0.5*(log(DBH/D)^2/K)),
              G ~ 1, D ~ 1, K ~ 1,
              nl = TRUE),
           prior = c(
                 prior("uniform(0.001,3)", lb = 0.001, ub = 3, nlpar = "G"),
                 prior("uniform(0.001,3)", lb = 0.001, ub = 3, nlpar = "K"),
                 prior("uniform(1,300)", lb = 1, ub = 300, nlpar = "D")
          ),
           data = filter(dt_P6, GenSp  == "Eschweilera_sagotiana"),
           cores = 4)
save(fit, file = "data/fit_esch.Rdata")
```

```{r}
load(file = "data/fit_esch.Rdata") ; fit
```

::: notes
A Eschweilera é a espécie mais abundante na Amazônia e cresce muito lentamente.
:::

## Uma inferência com *Eschweilera sagotiana*

```{r}
#| fig-height: 4.5
#| fig-width: 7
#| fig-align: center
plot_fit(fit = fit, Species = "Eschweilera_sagotiana")
```

## Modelo de crescimento individual

$$log(AGR+1)= G_{tree} \times exp[-0.5 \times( \frac{log(DBH/D)^2}{K})] ~~|~~G_{tree} = G_{species}+\epsilon_{tree}$$

```{r}
#| fig-height: 3
#| fig-width: 6
#| fig-align: center
expand_grid(DBH = 10:100, G_tree = rnorm(10, 0.5, 0.1)) %>% 
  mutate(log_agr = G_tree*exp(-0.5*(log(DBH/50)^2/0.2))) %>% 
  ggplot(aes(DBH, exp(log_agr)-1,
             group = as.character(G_tree))) + geom_line() + theme_bw() +
  labs(x = "Ano da medição",
       y = "Crescimento anual") + theme_bw() +
  geom_vline(xintercept = 50, colour = "red", linetype = "dashed") + 
  geom_hline(yintercept = exp(0.5)-1, colour = "red", linetype = "dashed")
```

::: notes
Para levar em conta a variação de um indivíduo para outro, redefinimos o potencial G do indivíduo como seguindo uma distribuição normal centrada no potencial da espécie
:::

## Modelo de crescimento individual

```{r}
#| eval: false
fit <- brm(bf(log(Growth+1) ~ G*exp(-0.5*(log(DBH/D)^2/K)),
              G ~ 1|idTree, D ~ 1, K ~ 1,
              nl = TRUE),
           prior = c(
                 prior("uniform(0.001,3)", lb = 0.001, ub = 3, nlpar = "G"),
                 prior("uniform(0.001,3)", lb = 0.001, ub = 3, nlpar = "K"),
                 prior("uniform(1,300)", lb = 1, ub = 300, nlpar = "D")
          ),
           data = filter(dt_P6, GenSp  == "Dicorynia_guianensis"),
           cores = 4)
save(fit, file = "data/fit_dico_ind.Rdata")
```

```{r}
load(file = "data/fit_dico_ind.Rdata") ; fit
```

## Modelo de crescimento individual

```{r}
#| fig-align: center
#| fig-height: 4
fit %>% 
  spread_draws(b_G_Intercept, r_idTree__G[idTree,]) %>% 
  mutate(G_tree = exp(b_G_Intercept + r_idTree__G) - 1) %>% 
  group_by(idTree) %>% 
  summarise(G_tree = median(G_tree)) %>% 
  ggplot(aes(G_tree)) + geom_histogram() + theme_bw() + 
  labs(x = "Crescimento individual (em cm/ano)")
```

# Usar características funcionais para explicar o crescimento

## Distribuição das crescimentos

Começamos recuperando todos os crescimentos das espécies de Paracou disponíveis em [Schmitt, Hérault, Derroire (2023)](https://onlinelibrary.wiley.com/doi/full/10.1111/ele.14318), e selecionamos as espécies para as quais temos valores de características

```{r}
#| fig-align: center
#| fig-height: 3.5
dt <- read_csv("data/growth_raw.csv", locale = locale(decimal_mark = ",")) %>% 
  select(Species, `Median Gmax`) %>% 
  rename(species = Species, Gmax =  `Median Gmax`) %>% 
  mutate(species = gsub(" ", "_", species)) %>% 
  right_join(dt_traits) %>% 
  filter(Gmax < 3)
dt %>% ggplot(aes(Gmax)) + geom_histogram() + theme_bw() + scale_x_log10()
```

::: notes
Filtramos os crescimentos \< 3 para remover a Cecropia, que é um outlier.
:::

## Correlações entre características e crescimento

Primeiro, podemos analisar a correlação com o crescimento.
Como as características estão correlacionadas, usamos apenas wsg e sla para representar as diferentes estratégias.

```{r}
#| fig-align: center
#| fig-height: 4
ggpairs(dt, columns = c("Gmax", "LMA", "wsg"))
```

## Regressão linear

Também podemos usar a regressão linear para identificar estratégias relacionadas ao crescimento das espécies.

```{r}
lm(Gmax ~ LMA + wsg, dt) %>% 
  summary()
```

# Conclusão

Parabéns 👏 , agora vocês são profissionais do modelagem do crescimento!

Falando mais seriamente, ficaremos felizes em responder a quaisquer perguntas que você possa ter.

::: footer
*Sylvain Schmitt (sylvain.schmitt\@cirad.fr) & Géraldine Derroire (geraldine.derroire\@cirad.fr)*
:::

::: notes
Muito obrigado por sua antenção!
Agora responderemos suas perguntas.
:::
